RP2040 Pin allocation
GPIO  Block     Use
  0   UART0     Main UART to Pi TX
  1   UART0     Main UART to Pi RX
  2   UART0     Main UART to Pi CTS
  3   UART0     Main UART to Pi RTS
  4   PIO       Port2 RX
  5   PIO       Port2 TX
  6   PIO       Port2 RS485TXRX
  7   PIO       Port2 RS485TXEnable
  8   IIC0      SDA0 PORTS 1,2 and Accelerometer
  9   IIC0      SCL0
 10   PIO       Port1 RX
 11   PIO       Port1 TX
 12   PIO       Port1 RS485TXRX
 13   PIO       Port1 RS485TXEnable
 14   GPIO      LED0
 15   GPIO      LED1
 16   GPIO/IRQ  PORT_FAULT ( +3.3v to the ports overloaded) needs pullup
 17   GPIO      PORT_CE ( +3.3v to the ports enable pin)
 18   IIC1      SDA1 Ports 3,4
 19   IIC1      SCL1
 20   PIO       Port4 RX
 21   PIO       Port4 TX
 22   PIO       Port4 RS485TXRX
 23   PIO       Port4 RS485TXEnable
 24   PIO       Port3 RX
 25   PIO       Port3 TX
 26   PIO       Port3 RS485TXRX
 27   PIO       Port3 RS485TXEnable
 28   GPIO/IRQ  nFL (Motor fault) needs pull up
 29   ADC       ADC_VIN = (vin*10/(10+47))

To get Picoprobe to work with udev rule some combination of the following
works.

root@ear:/etc/udev/rules.d# cat 99-picoprobe.rules
# Picoprobe
# ATTRS{idVendor}=="2E8A", ATTRS{idProduct}=="0004", MODE="0666", OWNER="mo", GROUP="mo"
# ATTRS{idVendor}=="2e8a", ATTRS{idProduct}=="0004", MODE="660", GROUP="plugdev", TAG+="uaccess"
ATTRS{idVendor}=="2e8a", ATTRS{idProduct}=="0004", MODE="660", GROUP="plugdev"

root@ear:/etc/udev/rules.d# /etc/init.d/udev restart
root@ear:/etc/udev/rules.d# udevadm control --reload

Built openocd branch with modified Makefile:
  prefix = /home/mo/tempd/pico/openocd/usr/local
instead of
  prefix = /usr/local

Then can make install as non-root and not write over other modified version
of openocd we already have in /usr/local.

Now (as non-root) can do

/home/mo/tempd/pico/openocd/usr/local/bin/openocd -f /home/mo/tempd/pico/openocd/usr/local/share/openocd/scripts/interface/picoprobe.cfg -f /home/mo/tempd/pico/openocd/usr/local/share/openocd/scripts/target/rp2040.cfg -s tcl

For bootloader:
  Standard linker scripts are in pico-sdk/src/rp2_common/pico_standard_link
  Looks like we can override using a CMAKEism. From pico-sdk/src/rp2_common/pico_standard_link/CMakeLists.txt :
    # LINKER script will be PICO_TARGET_LINKER_SCRIPT if set on target, or ${CMAKE_CURRENT_LIST_DIR}/memmap_foo.ld



TODO
Fix GPIO drive strengths
Test ID margins
